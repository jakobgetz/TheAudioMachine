@import "variables";

// mixin sequencer notes

@mixin wrapper($rotate, $color, $width) {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: rotate($rotate);
  pointer-events: all;

  .note {
    width: 4.2vh;
    height: 4.2vh;
    border-radius: 50%;
    background-color: $color;
    top: 50%;
    left: $width;
    transform: translate(-50%, -50%);
    position: absolute;
    cursor: pointer;
    transition-duration: 0.25s;
  }

  .note:hover {
    width: 4.5vh;
    height: 4.5vh;
    background-color: lighten($color: $color, $amount: 30);
    box-shadow: 0 0 0.9vh 0.5vh $color;
  }

  .note-selected:hover {
    width: 4.6vh;
    height: 4.6vh;
    background-color: darken($color: $color, $amount: 35);
    // border: 3px solid $color;
    box-shadow: 0 0 0.9vh 0.5vh $color;
  }

  .note-played {
    width: 4.6vh;
    height: 4.6vh;
    box-shadow: 0 0 0.9vh 0.5vh $color;
  }
}

// Notes

// values for loops

$distance: 11vh, 16.7vh, 22.2vh, 27.9vh, 33.9vh, 40vh;
$elements: 16;
$deg: 360;

// for loop notes

@for $i from 0 through 5 {
  .sequence__layer-#{$i} {
    @for $j from 0 through 15 {
      .wrapper-#{$j} {
        @include wrapper(
                        (($j + 12) / $elements) * $deg + deg,
                        nth($inactive-colors, ($i + 1)),
                        nth($distance, ($i + 1))
        );
      }
      .wrapper-selected-#{$j} {
        @include wrapper(
                        (($j + 12) / $elements) * $deg + deg,
                        nth($active-colors, ($i + 1)),
                        nth($distance, ($i + 1))
        );
        .note {
          width: 4vh;
          height: 4vh;
          // border: 3px solid $color;
          box-shadow: 0 0 0.9vh 0.5vh darken(nth($active-colors, ($i + 1)), 20);
          &:hover {
            background-color: darken($color: nth($active-colors, ($i + 1)), $amount: 35);
          }
        }
      }
    }
  }
}
